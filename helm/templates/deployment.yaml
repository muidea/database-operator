apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "database-operator.name" . }}
  labels:
    {{- include "database-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "database-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "database-operator.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ if .Values.global.image.repository }}{{ .Values.global.image.repository }}{{ else }}{{.Values.image.repository }}{{end}}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "LISTENPORT"
              value: {{ .Values.service.port | quote }}
            - name: "NODEPORT"
              value: {{ .Values.service.nodePort | quote }}
            - name: "ENDPOINTNAME"
              value: {{ include "database-operator.name" . | quote }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/check/health
              port: {{ .Values.service.port }}
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/check/health
              port: {{ .Values.service.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/local/share/cluster
              name: config-path
      volumes:
        - name: config-path
          hostPath:
            path: /var/local/share/cluster
            type: ""
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
